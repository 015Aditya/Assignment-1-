{
 "cells": [
  {
   "cell_type": "raw",
   "id": "c1b0d93d-4ca3-4a60-9985-8c7d2fd7ab06",
   "metadata": {},
   "source": [
    "Question1 :- Who developed python programming language?  \n",
    "            >>Python was created by Guido van Rossum, and first released on February 20, 1991.Python is maintained by the Python Software Foundation, a non-profit membership organization and a community devoted to developing, improving, expanding, and popularizing the Python language and its environment.\n",
    " \n",
    " \n",
    "Question2 :- Which type of programming does python support? \n",
    "            >>Python is a multi-paradigm programming language. Object-oriented programming and structured programming are fully supported.\n",
    "\n",
    "\n",
    "Question3 :- Is python case sensitive when dealing with identifiers? \n",
    "            >>Python is case sensitive programming language as it treats uppercase and lowercase characters differently. Not only the characters it also treats the identifiers the same way. Since the language is case sensitive the user must be aware of case sensitivity while naming and assigning value to characters. You should be care ul for naming count1 and count2 if you wish to keep counts of two values.\n",
    "  \n",
    "  \n",
    "Question4 :- What is the correct extension of the python files?\n",
    "            >>he file extensions for Python are- .pyz\n",
    "                                                .pyd\n",
    "                                                .pyw\n",
    "                                                .pyo\n",
    "                                                .pyc\n",
    "                                                .pyi\n",
    "                                                .py\n",
    "  Python is a universal coding language, which means that it can be used for other forms of programming and software development outside of web application development, as opposed to HTML, CSS, and JavaScript. This includes back-end development, software development, data science, and system scripting.\n",
    "  \n",
    "  \n",
    "Question5 :- Is python code compiled or interpreted?\n",
    "            >>Python is interpreted.There is no separate compile step after writing Python code and before running the .py file.\n",
    "The Python interpreter software you download from python.org is called CPython because it's written in C.\n",
    "Python can be compiled into a binary executable with a tool like Py2Exe (on Windows), py2app (on macOS), or BeeWare (all OSes including mobile).Funny enough, there's also PyPy, a Python interpreter written in Python.\n",
    "\n",
    "\n",
    "Question6 :- Name a few blocks of code used to define in python leanguage?\n",
    "            >>A Python program is constructed from code blocks. A block is a piece of Python program text that is executed as a unit. The following are blocks: a module, a function body, and a class definition.\n",
    "            \n",
    "            \n",
    "Question7 :- State a character used to give single line comments in python? \n",
    "            >>We can write a single-line comment by adding a single # character before any statement or line of code.\n",
    "            \n",
    "            \n",
    "Question8 :- M\n",
    "ention functions which can help us to find the version of python that we are currently working on?\n",
    "            >>The function sys.version can help us to find the version of python that we are currently working on. It also contains information on the build number and compiler used. For example, 3.5.2, 2.7.3 etc. this function also returns the current date, time, bits etc along with the version.\n",
    "            \n",
    "            \n",
    "Question9 :- Python supports the creation anonymous functions at the runtime using a construct called?\n",
    "            >> Python supports the creation of anonymous functions (functions that are not bound to a name) at runtime, using a construct called lambda. Lambda functions are restricted to a single expression. They can be used wherever normal functions can be used.\n",
    "\n",
    "\n",
    "Question10 :- What does pip stand for python?\n",
    "             >>Pip stands for \"preferred installer program\". Python 2.7. 9 and later, and Python 3.4 and later include pip  by default.\n",
    "             \n",
    "             \n",
    "Question11 :- Mention a few built-in function in python?\n",
    "             >>Python abs()\n",
    "             returns absolute value of a number\n",
    "             \n",
    "             Python all()\n",
    "             returns true when all elements in iterable is true\n",
    "             \n",
    "             Python any()\n",
    "             Checks if any Element of an Iterable is True\n",
    "             \n",
    "             Python ascii()\n",
    "             Returns String Containing Printable Representation\n",
    "             \n",
    "             Python bin()\n",
    "             converts integer to binary string\n",
    "             \n",
    "             Python bool()\n",
    "             Converts a Value to Boolean\n",
    "\n",
    "             Python bytearray()\n",
    "             returns array of given byte size\n",
    "\n",
    "             Python bytes()\n",
    "             returns immutable bytes object\n",
    "\n",
    "             Python callable()\n",
    "             Checks if the Object is Callable\n",
    "\n",
    "             Python chr()\n",
    "             Returns a Character (a string) from an Integer\n",
    "\n",
    "             Python classmethod()\n",
    "             returns class method for given function\n",
    "\n",
    "             Python compile()\n",
    "             Returns a Python code object\n",
    "\n",
    "             Python complex()\n",
    "             Creates a Complex Number\n",
    "\n",
    "             Python delattr()\n",
    "             Deletes Attribute From the Object\n",
    "\n",
    "             Python dict()\n",
    "             Creates a Dictionary\n",
    "\n",
    "             Python dir()\n",
    "             Tries to Return Attributes of Object\n",
    "\n",
    "             Python divmod()\n",
    "             Returns a Tuple of Quotient and Remainder\n",
    "\n",
    "             Python enumerate()\n",
    "             Returns an Enumerate Object\n",
    "\n",
    "             Python eval()\n",
    "             Runs Python Code Within Program\n",
    "\n",
    "             Python exec()\n",
    "             Executes Dynamically Created Program\n",
    "\n",
    "             Python filter()\n",
    "             constructs iterator from elements which are true\n",
    "\n",
    "             Python float()\n",
    "             returns floating point number from number, string\n",
    "\n",
    "             Python format()\n",
    "             returns formatted representation of a value\n",
    "\n",
    "             Python frozenset()\n",
    "             returns immutable frozenset object\n",
    "\n",
    "             Python getattr()\n",
    "             returns value of named attribute of an object\n",
    "\n",
    "             Python globals()\n",
    "             returns dictionary of current global symbol table\n",
    "\n",
    "             Python hasattr()\n",
    "             returns whether object has named attribute\n",
    "\n",
    "             Python hash()\n",
    "             returns hash value of an object\n",
    "\n",
    "             Python help()\n",
    "             Invokes the built-in Help System\n",
    "\n",
    "             Python hex()\n",
    "             Converts to Integer to Hexadecimal\n",
    "\n",
    "             Python id()\n",
    "             Returns Identify of an Object\n",
    "\n",
    "             Python input()\n",
    "             reads and returns a line of string\n",
    "\n",
    "             Python int()\n",
    "             returns integer from a number or string\n",
    "\n",
    "             Python isinstance()\n",
    "             Checks if a Object is an Instance of Class\n",
    "\n",
    "             Python issubclass()\n",
    "             Checks if a Class is Subclass of another Class\n",
    "\n",
    "             Python iter()\n",
    "             returns an iterator\n",
    "\n",
    "             Python len()\n",
    "             Returns Length of an Object\n",
    "\n",
    "             Python list()\n",
    "             creates a list in Python\n",
    "\n",
    "             Python locals()\n",
    "             Returns dictionary of a current local symbol table\n",
    "\n",
    "             Python map()\n",
    "             Applies Function and Returns a List\n",
    "\n",
    "             Python max()\n",
    "             returns the largest item\n",
    "\n",
    "             Python memoryview()\n",
    "             returns memory view of an argument\n",
    "\n",
    "             Python min()\n",
    "             returns the smallest value\n",
    "\n",
    "             Python next()\n",
    "             Retrieves next item from the iterator\n",
    "\n",
    "             Python object()\n",
    "             creates a featureless object\n",
    "\n",
    "             Python oct()\n",
    "             returns the octal representation of an integer\n",
    "\n",
    "             Python open()\n",
    "             Returns a file object\n",
    "\n",
    "             Python ord()\n",
    "             returns an integer of the Unicode character\n",
    "\n",
    "             Python pow()\n",
    "             returns the power of a number\n",
    "\n",
    "             Python print()\n",
    "             Prints the Given Object\n",
    "\n",
    "             Python property()\n",
    "             returns the property attribute\n",
    "\n",
    "             Python range()\n",
    "             returns a sequence of integers\n",
    "\n",
    "             Python repr()\n",
    "             returns a printable representation of the object\n",
    "\n",
    "             Python reversed()\n",
    "             returns the reversed iterator of a sequence\n",
    "\n",
    "             Python round()\n",
    "             rounds a number to specified decimals\n",
    "\n",
    "             Python set()\n",
    "             constructs and returns a set\n",
    "\n",
    "             Python setattr()\n",
    "             sets the value of an attribute of an object\n",
    "\n",
    "             Python slice()\n",
    "             returns a slice object\n",
    " \n",
    "            Python sorted()\n",
    "            returns a sorted list from the given iterable\n",
    "\n",
    "            Python staticmethod()\n",
    "            transforms a method into a static method\n",
    "\n",
    "            Python str()\n",
    "            returns the string version of the object\n",
    "\n",
    "            Python sum()\n",
    "            Adds items of an Iterable\n",
    "\n",
    "            Python super()\n",
    "            Returns a proxy object of the base class\n",
    "\n",
    "            Python tuple()\n",
    "            Returns a tuple\n",
    "\n",
    "            Python type()\n",
    "            Returns the type of the object\n",
    "\n",
    "            Python vars()\n",
    "            Returns the _dict_ attribute\n",
    "\n",
    "            Python zip()\n",
    "            Returns an iterator of tuples\n",
    "\n",
    "            Python _import_()\n",
    "            sFunction called by the import statement.\n",
    "            \n",
    "            \n",
    "Question12 :- What is the maximum possible lenght of an identifier in python?\n",
    "             >> An identifier can have a maximum length of 79 characters in Python.\n",
    "             \n",
    "             \n",
    "Question13 :- What are the benifits of using python? \n",
    "             >>Benifits of using python-\n",
    "                                       1. Easy-to-learn and Easy-to-use\n",
    "                                       2. Improves Productivity\n",
    "                                       3. Interpreted Language\n",
    "                                       4. Open-source\n",
    "                                       5. Easily Portable\n",
    "                                       6. Massive Libraries\n",
    "                                       7. Easy-to-integrate with Other Programming Languages\n",
    "                                       \n",
    "                                       \n",
    "Question14 :- How is memory managed in python? \n",
    "            >>Memory management in Python involves a private heap containing all Python objects and data structures. The management of this private heap is ensured internally by the Python memory manager.\n",
    "            \n",
    "            \n",
    "Question15 :- How to install python on windows and set path variables? \n",
    "            >>Install python from this link https://www.python.org/downloads/\n",
    "After this, install it on your PC. Look for the location where PYTHON has been installed on your PC using tge following command on your command prompt: cmd python.\n",
    "Then go to advanced system settings and add new variable and name it as PYTHON_NAME and paste the copied path.\n",
    "Then look for the path variable, select it's value and select edit\n",
    "Add a semicolon towards the end of the value if it's not present and then type %PYTHON_HOME%.\n",
    "        \n",
    "        The complete path of python.exe can be added by:\n",
    "                                                           >Right-clicking This PC and going to Properties.\n",
    "                                                           >Clicking on the Advanced system settings in the menu on the left.\n",
    "                                                           >Clicking on the Environment Variables button o​n the bottom right.    \n",
    "                                                           >In the System variables section, selecting the Path variable and clicking on                                                                 Edit. The next screen will show all the directories that are currently a part of                                                             the PATH variable.\n",
    "                                                           >Clicking on New and entering Python’s install directory.\n",
    "                                                           \n",
    "                                                           \n",
    "Question16 :- is indentation required in python?  \n",
    "             >>Indentation in Python is used to create a group of statements. Many popular languages such as C, and Java uses braces ({ }) to define a block of code, and Python uses indentation. Indentation in Python refers to the whitespaces at the start of the line. We can create indentation using space or tabs. When writing Python code, we have to define a group of statements for functions and loops. This is done by properly indenting the statements for that block.\n",
    "             "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
